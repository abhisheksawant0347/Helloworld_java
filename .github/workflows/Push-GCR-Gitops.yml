name: Build and Push docker image into GCR 

on:
 workflow_dispatch:
   inputs:
     DockerImageName:
       description: 'Docker image name'
       default: 'gitops'
       required: true 
     tag:
       description: Docker tag
       default: latest
       required: true
jobs:
  Build-Docker-Images:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      continue-on-error: true     
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: |
          mvn -B package --file pom.xml
          ls -la
          cd target
          ls -la
          
    - run: mkdir Artifact-Package && cp target/*.war Artifact-Package
    - uses: actions/upload-artifact@v3
      with:
        name: Package
        path: Artifact-Package  
     
    - name: Docker image build
      run: |
          docker build -t ${{github.event.inputs.DockerImageName}}:${{github.event.inputs.tag}} .
          docker images
    - name: Snyk Login
      run: |
           npm install snyk -g
           snyk auth ${{ secrets.SNYK_TOKEN }}
           snyk container test ${{github.event.inputs.DockerImageName}}:${{github.event.inputs.tag}} --json-file-output=SnykDockerImage.json
      continue-on-error: true   
    - name: Generate Snyk Docker Image json report into Html format
      run: |
           npm install snyk-to-html -g
           snyk-to-html -i SnykDockerImage.json -o SnykDockerImage.html
           ls -la
    - run: mkdir DockerScan && cp SnykDockerImage.html DockerScan      
    - uses: actions/upload-artifact@v3 
      with:
        name: Docker report
        path: DockerScan

  Deploy:
    runs-on: ubuntu-latest 
    needs: Build-Docker-Images
    permissions: 
      contents: read
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1 
      - name: Login to GCR
        env:
          PROJECT_ID: alert-outlet-402706 
        uses: google-github-actions/setup-gcloud@v0.3.0 
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }} 
          project_id: ${{ env.PROJECT_ID }} 
          export_default_credentials: true
          
      - name: Build Docker Image
        env:
          IMAGE_NAME: ${{github.event.inputs.DockerImageName}}:${{github.event.inputs.tag}} 
          PROJECT_ID: alert-outlet-402706 

        run: |
           mvn -B package --file pom.xml
           ls -la
           docker build -t $IMAGE_NAME . 
        
      - name: Configure Docker Client
        run:  |-
          gcloud auth configure-docker --quiet
        
      - name: Push Docker Image to Container Registry GCR
        env: 
          IMAGE_NAME: ${{github.event.inputs.DockerImageName}}:${{github.event.inputs.tag}}
          PROJECT_ID: alert-outlet-402706 
        #tag docker image to gcr image format then push to gcr
        run: |-
          docker tag $IMAGE_NAME gcr.io/$PROJECT_ID/$IMAGE_NAME
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME
          
  Update:
      runs-on: ubuntu-latest 
      needs: Deploy
      steps:
        - uses: actions/checkout@v3
        - run: |-
              git clone https://github.com/abhisheksawant0347/Helloworld_java.git
              cd Helloworld_java
              ls -la
              cd sample
              sed -re 's/gitops:latest/${{github.event.inputs.DockerImageName}}:${{github.event.inputs.tag}}/g' deployment.yml
              cat deployment.yml
              git config --global user.email "abhisheksawant0347@gmail.com"
              git config --global user.name "abhisheksawant0347"
              git add deployment.yml
              git commit -m "Updated deployment.yml file"
              git remote -v
              git status
              git push https://abhisheksawant0347:${{ secrets.TOKEN_GITHUB }}@github.com/abhisheksawant0347/Helloworld_java.git
              ls -la
              cat deployment.yml
              cd
              rm -rf Helloworld_java      
 
            


            
         
            

      
    

    
    
    

    


        

       

  
    
   
  
    
